@using CineBook.Interface
@using Microsoft.AspNetCore.Components
@inject ITicketService _ticketService
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
@{
    // Fetching the movie ID from the URL
    string urlQuery = Context.Request.Query["MovieId"];
    int parsedUrlQuery = int.Parse(urlQuery);

    // Fetching seats associated with the Movie ID
    var seats = _ticketService.GetSeatsByMovieId(parsedUrlQuery).GetAwaiter().GetResult();

    // Initialize a list to store selected seat IDs
    List<int> selectedSeatIds = new List<int>();
}

<div class="container mx-auto p-4">
    <h1 class="text-3xl font-bold mb-6 text-center">Select Your Seats</h1>
    <div class="mb-6 flex justify-center">
        <div class="w-24 h-2 bg-gray-300 rounded mb-10"></div>
    </div>

    <!-- Flexbox Layout for Seats and Booking Summary -->
    <div class="flex flex-col md:flex-row gap-8">
        <!-- Seat Grid -->
        <div class="flex-1">
            <div class="grid grid-cols-10 gap-2 mb-6 max-w-4xl mx-auto">
                @if (seats != null)
                {
                    @foreach (var seat in seats)
                    {
                        <div id="seat-@seat.Id"
                             class="@GetSeatClass(seat.IsAvailable) w-12 h-12 m-1 rounded-t-lg @GetSeatCursor(seat.IsAvailable) flex items-center justify-center text-white font-bold"
                             title="@seat.Number"
                             onclick="selectSeat(@seat.Id, @seat.IsAvailable.ToString().ToLower())">
                            @seat.Number
                        </div>
                    }
                }
                else
                {
                    <p class="text-center text-lg">Loading seats...</p>
                }
            </div>
        </div>

        <!-- Booking Summary -->
        <div class="w-full md:w-1/3 bg-white p-6 rounded-lg shadow-md">
            <h2 class="text-2xl font-bold mb-4">Booking Summary</h2>
            <p class="text-lg mb-2" id="selected-seats">Selected Seats: None</p>
            <p class="text-lg mb-4">Total Price: <span id="total-price">$0</span></p>
            <button class="w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-4 rounded-lg text-lg"
                    onclick="confirmBooking()">
                Confirm Booking
            </button>
        </div>
    </div>

    <!-- Legend -->
    <div class="flex justify-center space-x-6 my-6">
        <div class="flex items-center">
            <div class="w-6 h-6 bg-green-500 mr-2"></div>
            <span class="text-lg">Available</span>
        </div>
        <div class="flex items-center">
            <div class="w-6 h-6 bg-gray-500 mr-2"></div>
            <span class="text-lg">Booked</span>
        </div>
        <div class="flex items-center">
            <div class="w-6 h-6 bg-blue-500 mr-2"></div>
            <span class="text-lg">Selected</span>
        </div>
    </div>
</div>

<script>
    // Store selected seat IDs
    let selectedSeatIds = [];
    const seatPrice = 10;

    function selectSeat(seatId, isAvailable) {
        if (!isAvailable) {
            alert("This seat is already booked!");
            return;
        }

        const seatDiv = document.getElementById(`seat-${seatId}`);
        const index = selectedSeatIds.indexOf(seatId);

        if (index > -1) {
            // Deselect seat
            selectedSeatIds.splice(index, 1);
            seatDiv.classList.remove("bg-blue-500");
            seatDiv.classList.add("bg-green-500");
        } else {
            // Select seat
            selectedSeatIds.push(seatId);
            seatDiv.classList.remove("bg-green-500");
            seatDiv.classList.add("bg-blue-500");
        }

        updateSummary();
    }

    function updateSummary() {
        const selectedSeatsText = selectedSeatIds.length > 0
            ? selectedSeatIds.join(", ")
            : "None";

        const totalPrice = selectedSeatIds.length * seatPrice;

        document.getElementById("selected-seats").innerText = `Selected Seats: ${selectedSeatsText}`;
        document.getElementById("total-price").innerText = `$${totalPrice}`;
    }

    function confirmBooking() {
        if (selectedSeatIds.length === 0) {
            alert("Please select at least one seat to proceed with booking.");
            return;
        }

        // Send selectedSeatIds to the server for booking
        fetch('/Ticket/BookTicket', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(selectedSeatIds)
        })
        .then(response => {
            if (response.ok) {
                alert("Booking successful!");
                window.location.href = "/Home/Index"; // Redirect after booking
            } else {
                alert("Failed to book tickets. Please try again.");
            }
        })
        .catch(error => {
            console.error("Error booking tickets:", error);
            alert("An error occurred. Please try again.");
        });
    }
</script>

@functions {
    // Method to determine the CSS class for seat availability
    private string GetSeatClass(bool isAvailable)
    {
        return isAvailable ? "bg-green-500 hover:bg-green-600" : "bg-gray-500 cursor-not-allowed";
    }

    // Method to determine the cursor style for seat availability
    private string GetSeatCursor(bool isAvailable)
    {
        return isAvailable ? "cursor-pointer" : "cursor-not-allowed";
    }
}
